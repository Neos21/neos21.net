name: Deploy To GitHub Pages On Commit
on:
  push:
    branches:
      - master
  # 手動実行
  workflow_dispatch:
jobs:
  deploy-on-commit:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4
      # https://github.com/actions/setup-node
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      # 変更があったファイルを JSON ファイルに書き出す
      - name: Get Changed Files
        id  : get_changed_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: json
      - name: Write Changed Files
        run : |
          mkdir -p ./temp/
          echo '${{ steps.get_changed_files.outputs.added_modified }}' > ./temp/added_modified.json
          echo '${{ steps.get_changed_files.outputs.renamed }}' > ./temp/renamed.json
          echo '${{ steps.get_changed_files.outputs.removed }}' > ./temp/removed.json
          cat ./temp/added_modified.json
          cat ./temp/renamed.json
          cat ./temp/removed.json
      # npm install 後、一部ファイルはビルドしておく (アップロードするかどうかは後で特定する)
      - name: Setup npm
        run : |
          npm install
          npm run clear-dist
          npm run build-css
          npm run build-feeds
          npm run build-sitemap
      # JSON ファイルを基にビルドする (削除されたファイルについては扱わないので手作業する・ビルドしたファイルがあれば `./temp/upload.json` を生成する)
      - name: Detect And Build
        run : |
          node ./.github/workflows/deploy-on-commit.js
      # ビルドしたアップロード対象ファイルのリストがあるかチェックする
      - name: Check File Exists
        id  : check_file_exists
        uses: andstor/file-existence-action@v1
        with:
          files: './temp/upload.json'
      # ファイルがあればそれをデプロイする
      # `npm install` 時に `package.json` が整形されて差分扱いになるようなのでチェックアウトして戻しておく (コレをしないとブランチ切替に失敗する)
      # `./dist/` を Stash し `gh-pages` ブランチに切替後 Pop することで、`./dist/` ディレクトリを `gh-pages` ブランチ内に復元する
      # `./dist/` 配下の全ファイル (隠しファイルも含む `cp -r ./dist/.` という記法) を再帰的にコピーし `./dist/` ディレクトリを削除する (ファイル移動だと上手く処理しきれなかったので諦めた)
      # `git add` した結果差分が一つもなければ `git commit` に失敗するので、その場合はこの Actions が失敗扱いで表示される
      - name: Deploy To GitHub Pages
        if  : steps.check_file_exists.outputs.files_exists == 'true'
        run : |
          cat ./temp/upload.json
          rm -rf ./temp
          git checkout ./package.json
          git stash --include-untracked -- ./dist
          git fetch origin
          git checkout -b gh-pages --track origin/gh-pages
          git stash pop
          cp -r ./dist/. .
          rm -rf ./dist ./node_modules ./package-lock.json
          git config --global user.email 'neos21@gmail.com'
          git config --global user.name 'Neos21'
          git status --short --branch
          git add .
          git status --short --branch
          git commit -m 'Deploy gh-pages'
          git push origin gh-pages
