name: FTP Upload
on:
  push:
    branches:
      - master
    workflow_dispatch:
jobs:
  ftp-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      # 変更があったファイルを JSON ファイルに書き出す
      - name: Get Changed Files
        id  : get_changed_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: json
      - name: Write Changed Files
        run : |
          mkdir -p ./temp/
          echo '${{ steps.get_changed_files.outputs.added_modified }}' > ./temp/added_modified.json
          echo '${{ steps.get_changed_files.outputs.renamed }}' > ./temp/renamed.json
          echo '${{ steps.get_changed_files.outputs.removed }}' > ./temp/removed.json
          cat ./temp/added_modified.json
          cat ./temp/renamed.json
          cat ./temp/removed.json
      # npm install 後、一部ファイルはビルドしておく (アップロードするかどうかは後で特定する)
      - name: Setup npm
        run : |
          npm install
          npm run clear-dist
          npm run build-css
          npm run build-feeds
          npm run build-sitemap
      # JSON ファイルを基にアップロードするファイルをビルドしておき、ファイル名を ./temp/upload-files.json に書き出す
      - name: Detect And Upload
        run : |
          node ./.github/workflows/ftp-upload-build.js
          if [[ -e ./temp/upload-files.json ]]; then
            echo 'Do Upload'
            node ./.github/workflows/ftp-upload-files.js
          else
            echo 'Do Not Upload'
          fi
        env :
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
